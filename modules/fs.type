enum file_system { remote, local }

enum file_type {
  file(string),
  directory(list path),
  hard(path),
  link(path),
}

element fs(path, file_system)

attribute fs_type(file_type)
attribute owner(string)
attribute owner_group(string)

attribute mode(string)
uninterpreted mode_of_umask(string) -> string

function is_file(p: path, s: file_system) -> bool {
  assert exists fs(p, s);
  match fs(p, s).fs_type {
    file_type::file(_) => { return true; }
  }
  return false;
}

function is_dir(p: path, s: file_system) -> bool {
  assert exists fs(p, s);
  match fs(p, s).fs_type {
    file_type::directory(_) => { return true; }
  }
  return false;
}
